name: CI

on:
  push:
  pull_request:
  schedule:
  - cron:  '1 0 * * 0'

jobs:
  test-voms-atlas:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      if: "!(startsWith(github.ref, 'refs/tags/'))"
      uses: docker/build-push-action@v1
      with:
        repository: kratsg/voms-atlas
        dockerfile: voms-atlas/Dockerfile
        path: voms-atlas
        tags: test
        tag_with_sha: true
        tag_with_ref: true
        push: false
    - name: List Built Images
      run: docker images

  test-clang-format:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      if: "!(startsWith(github.ref, 'refs/tags/'))"
      uses: docker/build-push-action@v1
      with:
        repository: kratsg/clang-format
        dockerfile: clang-format/Dockerfile
        path: clang-format
        tags: test
        tag_with_sha: true
        tag_with_ref: true
        push: false
    - name: List Built Images
      run: docker images

  test-eos-krb5:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      if: "!(startsWith(github.ref, 'refs/tags/'))"
      uses: docker/build-push-action@v1
      with:
        repository: kratsg/eos-krb5
        dockerfile: eos-krb5/Dockerfile
        path: eos-krb5
        tags: test
        tag_with_sha: true
        tag_with_ref: true
        push: false
    - name: List Built Images
      run: docker images

  test-eos-krb5-shell2http:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      if: "!(startsWith(github.ref, 'refs/tags/'))"
      uses: docker/build-push-action@v1
      with:
        repository: kratsg/eos-krb5-shell2http
        dockerfile: eos-krb5-shell2http/Dockerfile
        path: eos-krb5-shell2http
        tags: test
        tag_with_sha: true
        tag_with_ref: true
        push: false
    - name: List Built Images
      run: docker images

  test-cern-phonebook:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Login to CERN GitLab
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.GITLAB_SSH_KEY }}
    - name: Clone pyphonebook
      run: |
        git -c core.sshCommand='ssh -o StrictHostKeyChecking=accept-new' clone --depth 1 --branch v2.1.5-1 ssh://git@gitlab.cern.ch:7999/linuxsupport/rpms/pyphonebook.git cern-phonebook/pyphonebook
        make -C cern-phonebook/pyphonebook setversion
    - name: Build Docker image
      if: "!(startsWith(github.ref, 'refs/tags/'))"
      uses: docker/build-push-action@v1
      with:
        repository: kratsg/cern-phonebook
        dockerfile: cern-phonebook/Dockerfile
        path: cern-phonebook
        tags: test
        tag_with_sha: true
        tag_with_ref: true
        push: false
    - name: List Built Images
      run: docker images
